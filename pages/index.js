import Head from "next/head";
import { useEffect, useState, useCallback } from "react";
import AddComment from "../components/AddComment";
import CommentMain from "../components/CommentMain";
import ModalDelete from "../components/ModalDelete";

export default function Home() {
  const [comments, setComments] = useState([]);
  const [currentUser, setCurrentUser] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const fetchCommentsHandler = useCallback(async () => {
    setIsLoading(true);
    setError(null);
    try {
      const response = await fetch(
        "https://interactive-comments-408e5-default-rtdb.asia-southeast1.firebasedatabase.app/.json"
      );

      if (!response.ok) {
        throw new Error("Something went wrong!");
      }

      const data = await response.json();

      const ids = Object.keys(data.comments);
      const commentsArray = Object.values(data.comments);
      commentsArray.map((item, i) => (item.id = ids[i]));

      setComments(commentsArray);
      setCurrentUser(data.currentUser);
    } catch (error) {
      setError(error.message);
    }
    setIsLoading(false);
  }, []);

  useEffect(() => {
    fetchCommentsHandler();
  }, [fetchCommentsHandler]);

  const addCommentHandler = async (addedComment) => {
    const response = await fetch(
      "https://interactive-comments-408e5-default-rtdb.asia-southeast1.firebasedatabase.app/comments.json",
      {
        method: "POST",
        body: JSON.stringify(addedComment),
        headers: {
          "Content-Type": "application/json",
        },
      }
    );
    const data = await response.json();
    fetchCommentsHandler();
  };

  const deleteCommentHandler = async (id) => {
    await fetch(
      "https://interactive-comments-408e5-default-rtdb.asia-southeast1.firebasedatabase.app/comments/" +
        id +
        ".json",
      {
        method: "DELETE",
      }
    );

    fetchCommentsHandler();
  };

  return (
    <div>
      <Head>
        <title>Interactive Comments Section</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/images/favicon-32x32.png' />
      </Head>
      <ModalDelete onDeleteComment={deleteCommentHandler} />
      {comments.length > 0 && (
        <main className='mx-4 my-8 max-w-[730px] md:mx-auto md:mt-16'>
          {/* Comments Section */}
          {comments.map((comment) => {
            return (
              <CommentMain
                comment={comment}
                currentUser={currentUser}
                key={comment.id}
              />
            );
          })}

          {/* Add Comment */}
          <AddComment
            currentUser={currentUser}
            onAddComment={addCommentHandler}
          />
        </main>
      )}
    </div>
  );
}
